:py:mod:`utils`
===============

.. py:module:: utils


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   utils.ChunkByEnum
   utils.SupportedNWMRetroVersionsEnum
   utils.SupportedNWMOperationalVersionsEnum
   utils.SupportedNWMDataSourcesEnum
   utils.SupportedKerchunkMethod




.. py:class:: ChunkByEnum


   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.

   .. py:attribute:: day
      :value: 'day'



   .. py:attribute:: location_id
      :value: 'location_id'




.. py:class:: SupportedNWMRetroVersionsEnum


   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.

   .. py:attribute:: nwm20
      :value: 'nwm20'



   .. py:attribute:: nwm21
      :value: 'nwm21'




.. py:class:: SupportedNWMOperationalVersionsEnum


   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.

   .. py:attribute:: nwm22
      :value: 'nwm22'



   .. py:attribute:: nwm30
      :value: 'nwm30'




.. py:class:: SupportedNWMDataSourcesEnum


   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.

   .. py:attribute:: GCS
      :value: 'GCS'



   .. py:attribute:: NOMADS
      :value: 'NOMADS'



   .. py:attribute:: DSTOR
      :value: 'DSTOR'




.. py:class:: SupportedKerchunkMethod


   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.

   .. py:attribute:: local
      :value: 'local'



   .. py:attribute:: remote
      :value: 'remote'



   .. py:attribute:: auto
      :value: 'auto'
