:py:mod:`nwm30_grid`
====================

.. py:module:: nwm30_grid


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   nwm30_grid.ConfigurationsEnum
   nwm30_grid.GridConfigurationModel




Attributes
~~~~~~~~~~

.. autoapisummary::

   nwm30_grid.configuration


.. py:class:: ConfigurationsEnum


   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.

   .. py:attribute:: analysis_assim
      :value: 'analysis_assim'



   .. py:attribute:: analysis_assim_no_da
      :value: 'analysis_assim_no_da'



   .. py:attribute:: analysis_assim_extend
      :value: 'analysis_assim_extend'



   .. py:attribute:: analysis_assim_extend_no_da
      :value: 'analysis_assim_extend_no_da'



   .. py:attribute:: analysis_assim_long
      :value: 'analysis_assim_long'



   .. py:attribute:: analysis_assim_long_no_da
      :value: 'analysis_assim_long_no_da'



   .. py:attribute:: analysis_assim_hawaii
      :value: 'analysis_assim_hawaii'



   .. py:attribute:: analysis_assim_hawaii_no_da
      :value: 'analysis_assim_hawaii_no_da'



   .. py:attribute:: analysis_assim_puertorico
      :value: 'analysis_assim_puertorico'



   .. py:attribute:: analysis_assim_puertorico_no_da
      :value: 'analysis_assim_puertorico_no_da'



   .. py:attribute:: short_range
      :value: 'short_range'



   .. py:attribute:: short_range_hawaii
      :value: 'short_range_hawaii'



   .. py:attribute:: short_range_puertorico
      :value: 'short_range_puertorico'



   .. py:attribute:: short_range_hawaii_no_da
      :value: 'short_range_hawaii_no_da'



   .. py:attribute:: short_range_puertorico_no_da
      :value: 'short_range_puertorico_no_da'



   .. py:attribute:: medium_range_mem1
      :value: 'medium_range_mem1'



   .. py:attribute:: medium_range_mem2
      :value: 'medium_range_mem2'



   .. py:attribute:: medium_range_mem3
      :value: 'medium_range_mem3'



   .. py:attribute:: medium_range_mem4
      :value: 'medium_range_mem4'



   .. py:attribute:: medium_range_mem5
      :value: 'medium_range_mem5'



   .. py:attribute:: medium_range_mem6
      :value: 'medium_range_mem6'



   .. py:attribute:: medium_range_mem7
      :value: 'medium_range_mem7'



   .. py:attribute:: long_range_mem1
      :value: 'long_range_mem1'



   .. py:attribute:: long_range_mem2
      :value: 'long_range_mem2'



   .. py:attribute:: long_range_mem3
      :value: 'long_range_mem3'



   .. py:attribute:: long_range_mem4
      :value: 'long_range_mem4'



   .. py:attribute:: forcing_medium_range
      :value: 'forcing_medium_range'



   .. py:attribute:: forcing_medium_range_blend
      :value: 'forcing_medium_range_blend'



   .. py:attribute:: forcing_medium_range_alaska
      :value: 'forcing_medium_range_alaska'



   .. py:attribute:: forcing_medium_range_blend_alaska
      :value: 'forcing_medium_range_blend_alaska'



   .. py:attribute:: forcing_short_range
      :value: 'forcing_short_range'



   .. py:attribute:: forcing_short_range_hawaii
      :value: 'forcing_short_range_hawaii'



   .. py:attribute:: forcing_short_range_puertorico
      :value: 'forcing_short_range_puertorico'



   .. py:attribute:: forcing_short_range_alaska
      :value: 'forcing_short_range_alaska'



   .. py:attribute:: forcing_analysis_assim
      :value: 'forcing_analysis_assim'



   .. py:attribute:: forcing_analysis_assim_extend
      :value: 'forcing_analysis_assim_extend'



   .. py:attribute:: forcing_analysis_assim_hawaii
      :value: 'forcing_analysis_assim_hawaii'



   .. py:attribute:: forcing_analysis_assim_puertorico
      :value: 'forcing_analysis_assim_puertorico'



   .. py:attribute:: forcing_analysis_assim_alaska
      :value: 'forcing_analysis_assim_alaska'




.. py:class:: GridConfigurationModel(**data: Any)


   Bases: :py:obj:`pydantic.BaseModel`

   Usage docs: https://docs.pydantic.dev/2.5/concepts/models/

   A base class for creating Pydantic models.

   Attributes:
       __class_vars__: The names of classvars defined on the model.
       __private_attributes__: Metadata about the private attributes of the model.
       __signature__: The signature for instantiating the model.

       __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
       __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
       __pydantic_custom_init__: Whether the model has a custom `__init__` function.
       __pydantic_decorators__: Metadata containing the decorators defined on the model.
           This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
       __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
           __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
       __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
       __pydantic_post_init__: The name of the post-init method for the model, if defined.
       __pydantic_root_model__: Whether the model is a `RootModel`.
       __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
       __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.

       __pydantic_extra__: An instance attribute with the values of extra fields from validation when
           `model_config['extra'] == 'allow'`.
       __pydantic_fields_set__: An instance attribute with the names of fields explicitly set.
       __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.

   .. py:attribute:: configuration
      :type: ConfigurationsEnum



   .. py:attribute:: analysis_assim
      :type: Optional[teehr.models.loading.nwm22_grid.Analysis]



   .. py:attribute:: analysis_assim_no_da
      :type: Optional[teehr.models.loading.nwm22_grid.Analysis]



   .. py:attribute:: analysis_assim_extend
      :type: Optional[teehr.models.loading.nwm22_grid.Analysis]



   .. py:attribute:: analysis_assim_extend_no_da
      :type: Optional[teehr.models.loading.nwm22_grid.Analysis]



   .. py:attribute:: analysis_assim_long
      :type: Optional[teehr.models.loading.nwm22_grid.Analysis]



   .. py:attribute:: analysis_assim_long_no_da
      :type: Optional[teehr.models.loading.nwm22_grid.Analysis]



   .. py:attribute:: analysis_assim_hawaii
      :type: Optional[teehr.models.loading.nwm22_grid.Analysis]



   .. py:attribute:: analysis_assim_hawaii_no_da
      :type: Optional[teehr.models.loading.nwm22_grid.Analysis]



   .. py:attribute:: analysis_assim_puertorico
      :type: Optional[teehr.models.loading.nwm22_grid.Analysis]



   .. py:attribute:: analysis_assim_puertorico_no_da
      :type: Optional[teehr.models.loading.nwm22_grid.Analysis]



   .. py:attribute:: short_range
      :type: Optional[teehr.models.loading.nwm22_grid.ShortRange]



   .. py:attribute:: short_range_hawaii
      :type: Optional[teehr.models.loading.nwm22_grid.ShortRange]



   .. py:attribute:: short_range_puertorico
      :type: Optional[teehr.models.loading.nwm22_grid.ShortRange]



   .. py:attribute:: short_range_hawaii_no_da
      :type: Optional[teehr.models.loading.nwm22_grid.ShortRange]



   .. py:attribute:: short_range_puertorico_no_da
      :type: Optional[teehr.models.loading.nwm22_grid.ShortRange]



   .. py:attribute:: medium_range_mem1
      :type: Optional[teehr.models.loading.nwm22_grid.MediumRange]



   .. py:attribute:: medium_range_mem2
      :type: Optional[teehr.models.loading.nwm22_grid.MediumRange]



   .. py:attribute:: medium_range_mem3
      :type: Optional[teehr.models.loading.nwm22_grid.MediumRange]



   .. py:attribute:: medium_range_mem4
      :type: Optional[teehr.models.loading.nwm22_grid.MediumRange]



   .. py:attribute:: medium_range_mem5
      :type: Optional[teehr.models.loading.nwm22_grid.MediumRange]



   .. py:attribute:: medium_range_mem6
      :type: Optional[teehr.models.loading.nwm22_grid.MediumRange]



   .. py:attribute:: medium_range_mem7
      :type: Optional[teehr.models.loading.nwm22_grid.MediumRange]



   .. py:attribute:: medium_range_no_da
      :type: Optional[teehr.models.loading.nwm22_grid.MediumRange]



   .. py:attribute:: long_range_mem1
      :type: Optional[teehr.models.loading.nwm22_grid.LongRange]



   .. py:attribute:: long_range_mem2
      :type: Optional[teehr.models.loading.nwm22_grid.LongRange]



   .. py:attribute:: long_range_mem3
      :type: Optional[teehr.models.loading.nwm22_grid.LongRange]



   .. py:attribute:: long_range_mem4
      :type: Optional[teehr.models.loading.nwm22_grid.LongRange]



   .. py:attribute:: forcing_medium_range
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_medium_range_blend
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_medium_range_alaska
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_medium_range_blend_alaska
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_short_range
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_short_range_hawaii
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_short_range_puertorico
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_short_range_alaska
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_analysis_assim
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_analysis_assim_extend
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_analysis_assim_hawaii
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_analysis_assim_puertorico
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]



   .. py:attribute:: forcing_analysis_assim_alaska
      :type: Optional[teehr.models.loading.nwm22_grid.Forcing]




.. py:data:: configuration
   :value: 'forcing_medium_range_blend_alaska'
