name: Python package

on:
  push:
    branches: [475-update-python-dependencies]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["pypy3.10", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/ --doctest-modules --junitxml=junit/test-results.xml

      - name: Surface failing tests
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
            # A list of JUnit XML files, directories containing the former, and wildcard
            # patterns to process.
            # See @actions/glob for supported patterns.
            path: test-results.xml

            # (Optional) Add a summary of the results at the top of the report
            summary: true

            # (Optional) Select which results should be included in the report.
            # Follows the same syntax as `pytest -r`
            display-options: fEX

            # (Optional) Fail the workflow if no JUnit XML was found.
            fail-on-empty: true

            # (Optional) Title of the test results section in the workflow summary
            title: Test results






        # steps:
        #     - uses: actions/checkout@v4
        #     - name: Set up Python
        #     uses: actions/setup-python@v5
        #     with:
        #         python-version: '3.x'
        #     - name: Install dependencies
        #     run: |
        #         python -m pip install --upgrade pip
        #         pip install -r requirements.txt
        #     - name: Test with pytest
        #     run: |
        #         pip install pytest pytest-cov
        #         pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html